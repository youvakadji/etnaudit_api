name: Django CI/CD

on:
  push:
    branches:
      - main  # Déclencher le workflow uniquement sur la branche principale

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # Remplacez par la version de Python utilisée par votre projet

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r back_end/requirements.txt  # Utilisation du chemin vers back_end/requirements.txt

    - name: Run unit tests in audit/tests
      run: |
        python back_end/manage.py test audit.tests  # Utilisation de back_end/manage.py pour exécuter les tests

    - name: Lint code
      run: |
        pip install flake8
        flake8 .  # Vérification du linting pour assurer la qualité du code

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ce job s'exécute uniquement si le job 'test' réussit
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r back_end/requirements.txt  # Utilisation du chemin vers back_end/requirements.txt

    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku git:remote -a etnauditapi
        git push heroku main
